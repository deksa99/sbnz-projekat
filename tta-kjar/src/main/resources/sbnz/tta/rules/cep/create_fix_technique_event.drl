package sbnz.tta.rules.cep;

import com.tta.app.model.events.FixTechniqueEvent;
import com.tta.app.model.events.ConsecutiveMissesEvent;
import com.tta.app.model.events.FixAngleEvent;
import com.tta.app.model.events.FixSpeedEvent;
import com.tta.app.model.enums.TrainingLevel;
import com.tta.app.model.training.Training;

rule "Fix Technique | misses"
    when
    	$tr: Training($id: id)
    	$consMiss: ConsecutiveMissesEvent(processed == false, trainingId == $id)
        not FixAngleEvent(processed == false, trainingId == $id)
        not FixSpeedEvent(processed == false, trainingId == $id)
    then
        modify ($consMiss) {
            setProcessed(true);
        }

        FixTechniqueEvent fixTech = new FixTechniqueEvent($id);
        fixTech.setMessage("Popravi tehniku [misses]");
        insert(fixTech);
        System.out.println("Kreiran dogadjaj:           Popravi tehniku [misses]");
end

rule "Fix Technique | misses + angle"
    when
    	$tr: Training($id: id)
    	$consMiss: ConsecutiveMissesEvent(processed == false, trainingId == $id)
        $fixAngle: FixAngleEvent(processed == false, trainingId == $id)
    then
        modify ($consMiss) {
            setProcessed(true);
        }
        modify ($fixAngle) {
            setProcessed(true);
        }
        FixTechniqueEvent fixTech = new FixTechniqueEvent($id);
        fixTech.setMessage("Popravi tehniku [misses + angle]");
        insert(fixTech);
        System.out.println("Kreiran dogadjaj:           Popravi tehniku [misses + angle]");
end

rule "Fix Technique | misses + speed"
    when
    	$tr: Training($id: id)
    	$consMiss: ConsecutiveMissesEvent(processed == false, trainingId == $id)
        $fixSpeed: FixSpeedEvent(processed == false, trainingId == $id)
    then
        modify ($consMiss) {
            setProcessed(true);
        }
        modify ($fixSpeed) {
            setProcessed(true);
        }
        FixTechniqueEvent fixTech = new FixTechniqueEvent($id);
        fixTech.setMessage("Popravi tehniku [misses + speed]");
        insert(fixTech);
        System.out.println("Kreiran dogadjaj:           Popravi tehniku [misses + speed]");
end

rule "Fix Technique | angle + speed"
    when
    	$tr: Training($id: id)
    	$fixAngle: FixAngleEvent(processed == false, trainingId == $id)
        $fixSpeed: FixSpeedEvent(processed == false, trainingId == $id)
    then
        modify ($fixAngle) {
            setProcessed(true);
        }
        modify ($fixSpeed) {
            setProcessed(true);
        }
        FixTechniqueEvent fixTech = new FixTechniqueEvent($id);
        fixTech.setMessage("Popravi tehniku [angle + speed]");
        insert(fixTech);
        System.out.println("Kreiran dogadjaj:           Popravi tehniku [angle + speed]");
end